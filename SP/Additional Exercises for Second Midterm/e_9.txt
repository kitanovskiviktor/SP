Во рамките на текстуална датотека matrica.txt се сместени елементите (целобројни вредности) од една матрица (A). Во првиот ред од датотеката се запишани бројот на редици n и бројот на колони m на матрицата (n, m < 120). Потоа, во секој ред од датотеката се запишани елементите од соодветната редица на матрицата.

Да се испечати колку индексни броеви има во секоја колона поединечно.

Индексен број е број чија вредност е идентична со вредноста што се добива со спојување на индексот од редицата и колоната на елементот.




Помош:

Индексен елемент: вредноста на елементот Aij е иста со ij како број

- ако i=10, j=31, елементот Aij треба да има вредност 1031 за да биде индексен број

Пример:

Влез: // датотека matrica.txt

4  5

0    1    2    3    4

5    6    7    8    9

10  21  22  23  11

0    1    2    33    4

Излез:

1

2

2

3

1


Објаснување:

Во матрицата A индексни елементи се: 

1ва колона: 0

2ра колона: 1, 21

3та колона: 2, 22

4та колона: 3, 23, 33

5та колона: 4

#include<stdio.h>
#include<ctype.h>
#include<string.h>

void wtf() {
    FILE *f = fopen("matrica.txt", "w");
    char c;
    while((c = getchar()) != '#') {
        fputc(c, f);
    }
    fclose(f);
}

int main() {
    wtf();
    
    FILE *dat;
    
     if((dat=fopen("matrica.txt", "r"))==NULL) {
        printf("Greska");
        return 0;
    }
    
    int M, N;
    int niza[120][120];
    fscanf(dat, "%d", &M);
    fscanf(dat, "%d", &N);
    
    for(int i=0; i<M; i++) {
        for(int j=0; j<N; j++) {
            fscanf(dat, "%d", &niza[i][j]);
        }
    }
    
    int brojac;
    
    for(int i=0; i<N; i++) {
        brojac = 0;
        for(int j=0; j<M; j++) {
            int brojce = 0;
            if(i < 10) {
                brojce = 10;
            }
           else  if(i>=10 && i<100) {
                brojce = 100;
            }
            else {
                brojce = 1000;
            }
            if(niza[j][i]==(i+(brojce*j))) {
                brojac++;
            }
        }
        printf("%d\n", brojac);
    }
    fclose(dat);
    return 0;
}

